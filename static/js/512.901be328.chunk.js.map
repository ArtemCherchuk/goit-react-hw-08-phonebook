{"version":3,"file":"static/js/512.901be328.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","redux/contacts/contacts.selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","webpack://react-homework-template/./src/components/ModalContactDetail/ModalContactDetail.module.css?10ec","redux/modalContactDetail/modalContactDetail.selectors.js","components/ModalContactDetail/ModalContactDetail.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/Title/Title.jsx","pages/Contacts.jsx"],"sourcesContent":["import { Dna } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Dna\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"dna-wrapper\"\n    />\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contactsStore.contacts.items;\nexport const selectContactsIsLoading = state =>\n  state.contactsStore.contacts.isLoading;\nexport const selectContactsError = state => state.contactsStore.contacts.error;\nexport const selectContactsFilter = state => state.contactsStore.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectContactsFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Notiflix from 'notiflix';\n\nimport css from 'components/ContactForm/ContactForm.module.css';\nimport { selectContacts } from 'redux/contacts/contacts.selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      name,\n      number,\n    };\n\n    const hasDuplicates = contacts.some(\n      item =>\n        item.name.toLowerCase() === newUser.name.toLowerCase() ||\n        item.number === newUser.number\n    );\n\n    if (hasDuplicates) {\n      Notiflix.Notify.failure(`A contact with the name: '${newUser.name}' and \n      number: '${newUser.number}' is already in the list!`);\n      return;\n    }\n    dispatch(addContact(newUser));\n\n    setName('');\n    setNumber('');\n  };\n\n  const onChangeInput = e => {\n    const value = e.target.value;\n    const nameInput = e.target.name;\n\n    switch (nameInput) {\n      case 'name':\n        setName(value);\n        return;\n\n      case 'number':\n        setNumber(value);\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <div>\n      <form className={css.form} onSubmit={onFormSubmit}>\n        <label className={css.labelForm}>Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          required\n          placeholder=\"Your name\"\n          className={css.inputForm}\n          value={name}\n          onChange={onChangeInput}\n        />\n        <label className={css.labelForm}>Number</label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          required\n          placeholder=\"Your number\"\n          pattern=\"^\\+?\\d{1,4}[ .\\-]?\\(?\\d{1,3}\\)?[ .\\-]?\\d{1,4}[ .\\-]?\\d{1,4}[ .\\-]?\\d{1,9}$\"\n          className={css.inputForm}\n          value={number}\n          onChange={onChangeInput}\n        />\n        <button type=\"submit\" className={css.button}>\n          Add Contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"listItem\":\"ContactList_listItem__SptUx\",\"text\":\"ContactList_text__+NWAW\",\"textNumber\":\"ContactList_textNumber__WI5VU\",\"textName\":\"ContactList_textName__qctYv\",\"buttons\":\"ContactList_buttons__WPzvW\",\"button\":\"ContactList_button__7kL4l\"};","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"ModalContactDetail_backdrop__se24b\",\"modal\":\"ModalContactDetail_modal__VH9GL\",\"closeBtn\":\"ModalContactDetail_closeBtn__bdjEJ\",\"infoContact\":\"ModalContactDetail_infoContact__BF55x\",\"icon\":\"ModalContactDetail_icon__oo9x7\"};","export const selectIsOpenModal = state => state.modalStore.isOpenModal;\nexport const selectModalData = state => state.modalStore.modalData;\n","// import css from 'components/ContactForm/ContactForm.module.css';\nimport css from 'components/ModalContactDetail/ModalContactDetail.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeModal } from 'redux/modalContactDetail/modalContactDetail.reducer';\nimport { selectModalData } from 'redux/modalContactDetail/modalContactDetail.selectors';\nimport icon from '../../img/icon.webp';\nconst ModalContactDetail = () => {\n  const dispatch = useDispatch();\n  const modalData = useSelector(selectModalData);\n  console.dir(modalData);\n\n  return (\n    <div className={css.backdrop}>\n      <div className={css.modal}>\n        <button className={css.closeBtn} onClick={() => dispatch(closeModal())}>\n          ‚ùå\n        </button>\n        <div className={css.infoContact}>\n          <img src={icon} alt=\"icon profile\" width=\"200\" className={css.icon} />\n          <h2 className={css.title}>Name: {modalData.name}</h2>\n          <h2 className={css.title}>Phone: {modalData.number}</h2>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ModalContactDetail;\n","import React, { useEffect } from 'react';\nimport css from 'components/ContactList/ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectVisibleContacts } from 'redux/contacts/contacts.selectors';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { openModal } from 'redux/modalContactDetail/modalContactDetail.reducer';\nimport ModalContactDetail from 'components/ModalContactDetail/ModalContactDetail';\nimport { selectIsOpenModal } from 'redux/modalContactDetail/modalContactDetail.selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectVisibleContacts);\n  const isOpenModal = useSelector(selectIsOpenModal);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <ul className={css.list}>\n        {contacts.length > 0 ? (\n          contacts.map(({ id, name, number }) => {\n            return (\n              <li key={id} className={css.listItem}>\n                <div className={css.text}>\n                  <p className={css.textName}>{name}</p>\n                  <span className={css.textNumber}>{number}</span>\n                </div>\n                <div className={css.buttons}>\n                  <button\n                    type=\"button\"\n                    className={css.button}\n                    onClick={() => dispatch(openModal({ name, number }))}\n                  >\n                    More\n                  </button>\n                  <button\n                    type=\"button\"\n                    className={css.button}\n                    onClick={() => dispatch(deleteContact(id))}\n                  >\n                    Delete\n                  </button>\n                </div>\n              </li>\n            );\n          })\n        ) : (\n          <p>Sorry, no contacts :( </p>\n        )}\n      </ul>\n\n      {isOpenModal && <ModalContactDetail />}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Filter_container__L5eml\",\"inputForm\":\"Filter_inputForm__uEF1C\",\"labelForm\":\"Filter_labelForm__hcONs\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport css from 'components/Filter/Filter.module.css';\nimport { filterValue } from 'redux/contacts/contacts.reducer';\nimport { selectContactsFilter } from 'redux/contacts/contacts.selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectContactsFilter);\n\n  const onChangeInput = e => {\n    const value = e.target.value;\n    dispatch(filterValue(value));\n  };\n\n  return (\n    <div className={css.container}>\n      <label className={css.labelForm}>Find contact by name</label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        className={css.inputForm}\n        onChange={onChangeInput}\n        value={filter}\n      />\n    </div>\n  );\n};\n","import css from '../ContactForm/ContactForm.module.css';\n\nexport const Title = ({ title }) => {\n  return <h2 className={css.title}>{title}</h2>;\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { Title } from 'components/Title/Title';\nimport Notiflix from 'notiflix';\nimport { useSelector } from 'react-redux';\nimport {\n  selectContactsError,\n  selectContactsIsLoading,\n} from 'redux/contacts/contacts.selectors';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n  return (\n    <div>\n      <Title title={'Phonebook'} />\n      <ContactForm />\n      {isLoading && <Loader />}\n      <Title title={'Contacts'} />\n      <Filter />\n      <ContactList />\n      {error !== null && Notiflix.Notify.warning({ error })}\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","selectContacts","state","contactsStore","contacts","items","selectContactsIsLoading","isLoading","selectContactsError","error","selectContactsFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","onChangeInput","e","value","target","className","css","onSubmit","preventDefault","newUser","some","item","Notiflix","addContact","type","required","placeholder","onChange","pattern","selectIsOpenModal","modalStore","isOpenModal","selectModalData","modalData","console","dir","onClick","closeModal","src","icon","alt","ContactList","useEffect","fetchContacts","length","map","id","openModal","deleteContact","Filter","filterValue","Title","title"],"sourceRoot":""}