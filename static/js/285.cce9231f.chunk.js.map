{"version":3,"file":"static/js/285.cce9231f.chunk.js","mappings":"6LAEaA,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,cACVC,aAAc,CAAC,EACfC,aAAa,eAGlB,C,8GC+DD,UAlEiB,WACf,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IAmB1B,OACE,kBAAMC,SAnBa,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cAMTC,EAAW,CACfC,KALWH,EAAKI,SAASC,SAASC,MAMlCC,MALYP,EAAKI,SAASI,UAAUF,MAMpCG,SALeT,EAAKI,SAASM,aAAaJ,OAQ5ChB,GAASqB,EAAAA,EAAAA,IAAaT,IAEtBF,EAAKY,OACN,EAE+BC,UAAWC,EAAAA,EAAAA,KAAzC,WACE,mBAAOD,UAAWC,EAAAA,EAAAA,UAAlB,UAAiC,SAE/B,kBACEC,KAAK,OACLZ,KAAK,WACLa,YAAY,YACZC,UAAQ,EACRJ,UAAWC,EAAAA,EAAAA,gBAIf,mBAAOD,UAAWC,EAAAA,EAAAA,UAAlB,UAAiC,UAE/B,kBACEC,KAAK,QACLZ,KAAK,YACLa,YAAY,kBACZC,UAAQ,EACRJ,UAAWC,EAAAA,EAAAA,gBAIf,mBAAOD,UAAWC,EAAAA,EAAAA,UAAlB,UAAiC,aAE/B,kBACEC,KAAK,WACLZ,KAAK,eACLa,YAAY,WACZC,UAAQ,EACRJ,UAAWC,EAAAA,EAAAA,gBAIf,mBAAQC,KAAK,SAASF,UAAWC,EAAAA,EAAAA,OAAjC,SAA6C,YAG5CtB,IAAa,SAAC,IAAD,IACH,OAAVG,GAAkBuB,IAAAA,OAAAA,QAAwB,CAAEvB,MAAAA,MAGlD,C","sources":["components/Loader/Loader.jsx","pages/Register.jsx"],"sourcesContent":["import { Dna } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Dna\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"dna-wrapper\"\n    />\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { authRegister } from 'redux/auth/operations';\nimport css from 'components/ContactForm/ContactForm.module.css';\nimport {\n  selectAuthError,\n  selectAuthIsLoading,\n} from 'redux/auth/auth.selectors';\nimport { Loader } from 'components/Loader/Loader';\nimport Notiflix from 'notiflix';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectAuthIsLoading);\n  const error = useSelector(selectAuthError);\n  const onSubmitForm = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    const name = form.elements.userName.value;\n    const email = form.elements.userEmail.value;\n    const password = form.elements.userPassword.value;\n\n    const userData = {\n      name,\n      email,\n      password,\n    };\n\n    dispatch(authRegister(userData));\n\n    form.reset();\n  };\n  return (\n    <form onSubmit={onSubmitForm} className={css.form}>\n      <label className={css.labelForm}>\n        Name:\n        <input\n          type=\"text\"\n          name=\"userName\"\n          placeholder=\"Your Name\"\n          required\n          className={css.inputForm}\n        />\n      </label>\n\n      <label className={css.labelForm}>\n        Email:\n        <input\n          type=\"email\"\n          name=\"userEmail\"\n          placeholder=\"email@email.com\"\n          required\n          className={css.inputForm}\n        />\n      </label>\n\n      <label className={css.labelForm}>\n        Password:\n        <input\n          type=\"password\"\n          name=\"userPassword\"\n          placeholder=\"********\"\n          required\n          className={css.inputForm}\n        />\n      </label>\n\n      <button type=\"submit\" className={css.button}>\n        Sign Up\n      </button>\n      {isLoading && <Loader />}\n      {error !== null && Notiflix.Notify.warning({ error })}\n    </form>\n  );\n};\n\nexport default Register;\n"],"names":["Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","dispatch","useDispatch","isLoading","useSelector","selectAuthIsLoading","error","selectAuthError","onSubmit","e","preventDefault","form","currentTarget","userData","name","elements","userName","value","email","userEmail","password","userPassword","authRegister","reset","className","css","type","placeholder","required","Notiflix"],"sourceRoot":""}